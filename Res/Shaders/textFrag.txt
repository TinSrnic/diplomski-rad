#version 400 core

in vec2 textureCoords;
out vec4 out_color;

uniform sampler2D fontTexture;
uniform vec3 textColor;
uniform int useOutline;
uniform vec3 textOutlineColor = vec3(-1.0, -1.0, -1.0);
uniform float offset;

const float width = 0.5;
const float edge = 0.1;

const float borderWidth = 0.7;
const float borderEdge = 0.1;

void main(void){

	if(useOutline == 0) {	
		float alpha = texture(fontTexture, textureCoords).a;
		if(alpha < 0.4) discard;
		out_color = vec4(textColor, 1.0);
	} else {
		float distance = 1 - texture(fontTexture, textureCoords).a;
		if(distance > 0.7) discard;
		float offsetDistance = 1 - texture(fontTexture, textureCoords + offset).a;

		float alpha = 1 - smoothstep(width, width + edge, distance);
		float outlineAlpha = 1 - smoothstep(borderWidth, borderWidth + borderEdge, offsetDistance);

		float overallAlpha = alpha + (1 - alpha) * outlineAlpha;
		vec3 overallColor = mix(textOutlineColor, textColor, alpha / outlineAlpha);

		out_color = vec4(overallColor, overallAlpha);
	}
}