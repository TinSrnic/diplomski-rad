#version 430
uniform int width;
uniform int height;
uniform float deltaTime;
layout (binding = 0, rgba8) uniform image2D destTex;
layout (local_size_x = 8, local_size_y = 8) in;

void main() {
	float diffuseSpeed = 100;
	float decayRate = 0.1;
	ivec2 id = ivec2(gl_GlobalInvocationID.xy);
	
	vec4 sum = vec4(0, 0, 0, 0);
	for(int offsetX = -1; offsetX <= 1; offsetX++) {
		for(int offsetY = -1; offsetY <= 1; offsetY++) {
			int sampleX = min(width-1, max(0, id.x + offsetX));
			int sampleY = min(height-1, max(0, id.y + offsetY));
			sum += imageLoad(destTex, ivec2(sampleX, sampleY));
		}
	}
	
	vec4 blurResult = sum / 9;
	vec4 originalColor = imageLoad(destTex, id);
	float diffuseWeight = clamp(diffuseSpeed * deltaTime, 0.0, 1.0);
	
	vec4 finalColor = originalColor * (1 - diffuseWeight) + blurResult * (diffuseWeight);
	imageStore(destTex, id, max(vec4(0, 0, 0, 1), finalColor - decayRate * deltaTime));
}